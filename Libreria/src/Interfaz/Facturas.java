/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.util.ArrayList;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;
import libreria.Factura;
import libreria.Herramientas;
import libreria.Tools;

/**
 *
 * @author David
 */
public class Facturas extends javax.swing.JPanel implements Tools{

    /**
     * Creates new form Default
     */
    public Facturas() {
        initComponents();
        initComponent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Cod_Factura = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        setMaximumSize(new java.awt.Dimension(900, 579));
        setMinimumSize(new java.awt.Dimension(900, 579));
        setPreferredSize(new java.awt.Dimension(900, 579));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setBackground(new java.awt.Color(198, 219, 239));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod_Factura", "Fecha", "Subtotal", "I.V", "Total", "Client.Cedula", "Cod_Haciento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 840, 250));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        jTable2.setBackground(new java.awt.Color(198, 219, 239));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod_Factura", "ISBN", "Unidades", "Costo_Unitario", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 840, 200));

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, -1, -1));

        jButton2.setBackground(new java.awt.Color(0, 102, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Mostrar Todas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 30, -1, -1));

        try {
            Cod_Factura.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##############")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        Cod_Factura.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        Cod_Factura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Cod_FacturaFocusGained(evt);
            }
        });
        add(Cod_Factura, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, 180, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ingrese el Cod_Factura");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 150, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        buscar=false;
        for (Factura factura : Facturas) {
            if ((factura.getCod_Factura()+"").equals(Cod_Factura.getText().trim())) {
                facturable = factura;
                buscar=true;
                break;
            }
        }
        if (buscar) {
            LimpiarTablas();
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            modelo.addRow(new Object[]{facturable.getCod_Factura(),Herramientas.toFechaString(facturable.getFecha()),facturable.getSubtotal(),
                facturable.getIV(),facturable.getTotal(),facturable.getClient().getCedula(),facturable.getHacientoContable()});
            jTable1.setModel(modelo);
            CargarDetalles(facturable);
        }else{
            Herramientas.mensage("Esta Factura no existe", "Codigo de factura invalido");
            initComponent();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        initComponent();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        if (!buscar) {
            int index = jTable1.getSelectedRow();
            if (index!=-1 && index<Facturas.size()) {
                CargarDetalles(Facturas.get(index));
            }
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void Cod_FacturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cod_FacturaFocusGained
        Cod_Factura.setCaretPosition(0);
    }//GEN-LAST:event_Cod_FacturaFocusGained
    private void initComponent() {
        LimpiarTablas();
        Facturas = new ArrayList<>();
        Facturas.addAll(FACTURAS);
        buscar = false;
        facturable = null;
        Collections.sort(Facturas, (Factura o1, Factura o2) -> (-1*(o1.getFecha().compareTo(o2.getFecha()))));
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        Facturas.forEach((factura) -> {
            modelo.addRow(new Object[]{factura.getCod_Factura(),Herramientas.toFechaString(factura.getFecha()),factura.getSubtotal(),
                factura.getIV(),factura.getTotal(),factura.getClient().getCedula(),factura.getHacientoContable()});
        });
        jTable1.setModel(modelo);
    }
    
    private void CargarDetalles(Factura f) {
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        int Rows = modelo.getRowCount();
        for (int i = 0; i < Rows; i++) {
            modelo.removeRow(0);
        }
        jTable2.setModel(modelo);
        f.getDetalles().forEach((detalle) -> {
            modelo.addRow(new Object[]{detalle.getCod_Factura(),detalle.getLibro().getIbsn(),detalle.getUnidades(),
                detalle.getCosto_Unitario(),detalle.getTotal()});
        });
        jTable2.setModel(modelo);
    }
    
    private void LimpiarTablas(){
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        int Rows = modelo.getRowCount();
        for (int i = 0; i < Rows; i++) {
            modelo.removeRow(0);
        }
        jTable1.setModel(modelo);
        modelo = (DefaultTableModel) jTable2.getModel();
        Rows = modelo.getRowCount();
        for (int i = 0; i < Rows; i++) {
            modelo.removeRow(0);
        }
        jTable2.setModel(modelo);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField Cod_Factura;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
    private Factura facturable;
    private ArrayList<Factura> Facturas;
    private boolean buscar;
}
